Terminals unused in grammar

    COMP_EQL
    COMP_LT
    COMP_LE
    COMP_GT
    COMP_GE
    LIT_BOOL
    LIT_CHAR
    CTRL_IF
    CTRL_THEN
    CTRL_ELSE
    CTRL_ELIF
    CTRL_END
    CTRL_WHILE
    CTRL_DO
    ERROR


Grammar

    0 $accept: program $end

    1 program: program declaration
    2        | program assignment
    3        | %empty

    4 declaration: type VAR MISC_SEMI
    5            | type assignment

    6 assignment: VAR ASSIGN expr MISC_SEMI

    7 type: TYPE_INT
    8     | TYPE_CHAR
    9     | TYPE_BOOL

   10 expr: expr lineOperator term
   11     | term

   12 term: term pointOperator factor
   13     | factor

   14 factor: MISC_LP expr MISC_RP
   15       | number
   16       | VAR

   17 number: LIT_INT
   18       | LIT_ZERO
   19       | OP_SUB LIT_INT

   20 lineOperator: OP_ADD
   21             | OP_SUB

   22 pointOperator: OP_MUL
   23              | OP_DIV
   24              | OP_POT
   25              | OP_MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    OP_ADD (258) 20
    OP_SUB (259) 19 21
    OP_MUL (260) 22
    OP_DIV (261) 23
    OP_POT (262) 24
    OP_MOD (263) 25
    ASSIGN (264) 6
    COMP_EQL (265)
    COMP_LT (266)
    COMP_LE (267)
    COMP_GT (268)
    COMP_GE (269)
    VAR (270) 4 6 16
    TYPE_INT (271) 7
    TYPE_CHAR (272) 8
    TYPE_BOOL (273) 9
    LIT_INT (274) 17 19
    LIT_BOOL (275)
    LIT_CHAR (276)
    LIT_ZERO (277) 18
    CTRL_IF (278)
    CTRL_THEN (279)
    CTRL_ELSE (280)
    CTRL_ELIF (281)
    CTRL_END (282)
    CTRL_WHILE (283)
    CTRL_DO (284)
    MISC_LP (285) 14
    MISC_RP (286) 14
    MISC_SEMI (287) 4 6
    ERROR (288)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1 2 3
        on right: 0 1 2
    declaration (36)
        on left: 4 5
        on right: 1
    assignment (37)
        on left: 6
        on right: 2 5
    type (38)
        on left: 7 8 9
        on right: 4 5
    expr (39)
        on left: 10 11
        on right: 6 10 14
    term (40)
        on left: 12 13
        on right: 10 11 12
    factor (41)
        on left: 14 15 16
        on right: 12 13
    number (42)
        on left: 17 18 19
        on right: 15
    lineOperator (43)
        on left: 20 21
        on right: 10
    pointOperator (44)
        on left: 22 23 24 25
        on right: 12


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . declaration
    2        | program . assignment

    $end       shift, and go to state 2
    VAR        shift, and go to state 3
    TYPE_INT   shift, and go to state 4
    TYPE_CHAR  shift, and go to state 5
    TYPE_BOOL  shift, and go to state 6

    declaration  go to state 7
    assignment   go to state 8
    type         go to state 9


State 2

    0 $accept: program $end .

    $default  accept


State 3

    6 assignment: VAR . ASSIGN expr MISC_SEMI

    ASSIGN  shift, and go to state 10


State 4

    7 type: TYPE_INT .

    $default  reduce using rule 7 (type)


State 5

    8 type: TYPE_CHAR .

    $default  reduce using rule 8 (type)


State 6

    9 type: TYPE_BOOL .

    $default  reduce using rule 9 (type)


State 7

    1 program: program declaration .

    $default  reduce using rule 1 (program)


State 8

    2 program: program assignment .

    $default  reduce using rule 2 (program)


State 9

    4 declaration: type . VAR MISC_SEMI
    5            | type . assignment

    VAR  shift, and go to state 11

    assignment  go to state 12


State 10

    6 assignment: VAR ASSIGN . expr MISC_SEMI

    OP_SUB    shift, and go to state 13
    VAR       shift, and go to state 14
    LIT_INT   shift, and go to state 15
    LIT_ZERO  shift, and go to state 16
    MISC_LP   shift, and go to state 17

    expr    go to state 18
    term    go to state 19
    factor  go to state 20
    number  go to state 21


State 11

    4 declaration: type VAR . MISC_SEMI
    6 assignment: VAR . ASSIGN expr MISC_SEMI

    ASSIGN     shift, and go to state 10
    MISC_SEMI  shift, and go to state 22


State 12

    5 declaration: type assignment .

    $default  reduce using rule 5 (declaration)


State 13

   19 number: OP_SUB . LIT_INT

    LIT_INT  shift, and go to state 23


State 14

   16 factor: VAR .

    $default  reduce using rule 16 (factor)


State 15

   17 number: LIT_INT .

    $default  reduce using rule 17 (number)


State 16

   18 number: LIT_ZERO .

    $default  reduce using rule 18 (number)


State 17

   14 factor: MISC_LP . expr MISC_RP

    OP_SUB    shift, and go to state 13
    VAR       shift, and go to state 14
    LIT_INT   shift, and go to state 15
    LIT_ZERO  shift, and go to state 16
    MISC_LP   shift, and go to state 17

    expr    go to state 24
    term    go to state 19
    factor  go to state 20
    number  go to state 21


State 18

    6 assignment: VAR ASSIGN expr . MISC_SEMI
   10 expr: expr . lineOperator term

    OP_ADD     shift, and go to state 25
    OP_SUB     shift, and go to state 26
    MISC_SEMI  shift, and go to state 27

    lineOperator  go to state 28


State 19

   11 expr: term .
   12 term: term . pointOperator factor

    OP_MUL  shift, and go to state 29
    OP_DIV  shift, and go to state 30
    OP_POT  shift, and go to state 31
    OP_MOD  shift, and go to state 32

    $default  reduce using rule 11 (expr)

    pointOperator  go to state 33


State 20

   13 term: factor .

    $default  reduce using rule 13 (term)


State 21

   15 factor: number .

    $default  reduce using rule 15 (factor)


State 22

    4 declaration: type VAR MISC_SEMI .

    $default  reduce using rule 4 (declaration)


State 23

   19 number: OP_SUB LIT_INT .

    $default  reduce using rule 19 (number)


State 24

   10 expr: expr . lineOperator term
   14 factor: MISC_LP expr . MISC_RP

    OP_ADD   shift, and go to state 25
    OP_SUB   shift, and go to state 26
    MISC_RP  shift, and go to state 34

    lineOperator  go to state 28


State 25

   20 lineOperator: OP_ADD .

    $default  reduce using rule 20 (lineOperator)


State 26

   21 lineOperator: OP_SUB .

    $default  reduce using rule 21 (lineOperator)


State 27

    6 assignment: VAR ASSIGN expr MISC_SEMI .

    $default  reduce using rule 6 (assignment)


State 28

   10 expr: expr lineOperator . term

    OP_SUB    shift, and go to state 13
    VAR       shift, and go to state 14
    LIT_INT   shift, and go to state 15
    LIT_ZERO  shift, and go to state 16
    MISC_LP   shift, and go to state 17

    term    go to state 35
    factor  go to state 20
    number  go to state 21


State 29

   22 pointOperator: OP_MUL .

    $default  reduce using rule 22 (pointOperator)


State 30

   23 pointOperator: OP_DIV .

    $default  reduce using rule 23 (pointOperator)


State 31

   24 pointOperator: OP_POT .

    $default  reduce using rule 24 (pointOperator)


State 32

   25 pointOperator: OP_MOD .

    $default  reduce using rule 25 (pointOperator)


State 33

   12 term: term pointOperator . factor

    OP_SUB    shift, and go to state 13
    VAR       shift, and go to state 14
    LIT_INT   shift, and go to state 15
    LIT_ZERO  shift, and go to state 16
    MISC_LP   shift, and go to state 17

    factor  go to state 36
    number  go to state 21


State 34

   14 factor: MISC_LP expr MISC_RP .

    $default  reduce using rule 14 (factor)


State 35

   10 expr: expr lineOperator term .
   12 term: term . pointOperator factor

    OP_MUL  shift, and go to state 29
    OP_DIV  shift, and go to state 30
    OP_POT  shift, and go to state 31
    OP_MOD  shift, and go to state 32

    $default  reduce using rule 10 (expr)

    pointOperator  go to state 33


State 36

   12 term: term pointOperator factor .

    $default  reduce using rule 12 (term)
